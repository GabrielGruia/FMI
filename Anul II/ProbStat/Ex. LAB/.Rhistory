indMaxDay = which(sumDays == maxDay)
dMax = names(indMaxDay)
minDay = min(sumDays)
indMinDay = which(sumDays == minDay)
dMin = names(indMinDay)
values = which(fourWeeks > 120, arr.ind = TRUE, useNames = TRUE)
selection120 = data.frame(Week = rownames(fourWeeks)[values[, 1]],
Day = colnames(fourWeeks)[values[, 2]])
selection120 = selection120[order(selection120[, 1], selection120[, 2]), ]
print(fourWeeks)
print(values)
cat("Cel mai mult s-a vorbit in zilele de", names(which(colnames(fourWeeks) == dMax)), "\n")
cat("Cel mai putin s-a vorbit in zilele de", names(which(colnames(fourWeeks) == dMin)), "\n")
cat("Zilele in care s-a vorbit > 120 min sunt: ")
print(selection120)
View(selection120)
data(mtcars)
transmission = data.frame(Type = mtcars[, 9],
Weight = mtcars[, 6])
transmissionA = which(transmission[, 1] == 0)
transmissionM = which(transmission[, 1] == 1)
View(mtcars)
View(transmission)
data(mtcars)
transmission = data.frame(Type = mtcars[, 9],
Weight = mtcars[, 6])
transmissionA = transmission[which(transmission$Type == 0)]
transmissionM = transmission[which(transmission$Type == 1)]
data(mtcars)
transmission = data.frame(Type = mtcars[, 9],
Weight = mtcars[, 6])
transmissionA = transmission[which(transmission$Type == 0), ]
transmissionM = transmission[which(transmission$Type == 1), ]
View(transmissionA)
View(transmissionM)
View(transmissionA)
transmissionA = (transmission[which(transmission$Type == 0), ])[, 2]
View(transmissionM)
data(mtcars)
transmission = data.frame(Type = mtcars[, 9],
Weight = mtcars[, 6])
transmissionA = (transmission[which(transmission$Type == 0), ])[, 2]
transmissionM = (transmission[which(transmission$Type == 1), ])[, 2]
data(mtcars)
transmission = data.frame(Type = mtcars[, 9],
Weight = mtcars[, 6])
transmissionA = (transmission[which(transmission$Type == 0), ])[, 2]
transmissionM = (transmission[which(transmission$Type == 1), ])[, 2]
meanTransmissionA = mean(transmissionA)
meanTransmissionM = mean(transmissionM)
data(mtcars)
transmission = data.frame(Type = mtcars[, 9],
Weight = mtcars[, 6])
transmissionA = (transmission[which(transmission$Type == 0), ])[, 2]
transmissionM = (transmission[which(transmission$Type == 1), ])[, 2]
meanTransmissionA = mean(transmissionA)
meanTransmissionM = mean(transmissionM)
cat("Greutatea medie a masinilor cu Transmisie Automata:", transmissionA)
cat("Greutatea medie a masinilor cu Transmisie Manuala:", transmissionM)
#
#PROBLEMA 9
#
data(mtcars)
transmission = data.frame(Type = mtcars[, 9],
Weight = mtcars[, 6])
transmissionA = (transmission[which(transmission$Type == 0), ])[, 2]
transmissionM = (transmission[which(transmission$Type == 1), ])[, 2]
meanTransmissionA = mean(transmissionA)
meanTransmissionM = mean(transmissionM)
cat("Greutatea medie a masinilor cu Transmisie Automata:", transmissionA)
cat("Greutatea medie a masinilor cu Transmisie Manuala:", transmissionM)
data(mtcars)
transmission = data.frame(Type = mtcars[, 9],
Weight = mtcars[, 6])
transmissionA = (transmission[which(transmission$Type == 0), ])[, 2]
transmissionM = (transmission[which(transmission$Type == 1), ])[, 2]
meanTransmissionA = mean(transmissionA)
meanTransmissionM = mean(transmissionM)
cat("Greutatea medie a masinilor cu Transmisie Automata:", meanTransmissionA)
cat("Greutatea medie a masinilor cu Transmisie Manuala:", meanTransmissionM)
data(mtcars)
transmission = data.frame(Type = mtcars[, 9],
Weight = mtcars[, 6])
transmissionA = (transmission[which(transmission$Type == 0), ])[, 2]
transmissionM = (transmission[which(transmission$Type == 1), ])[, 2]
meanTransmissionA = mean(transmissionA)
meanTransmissionM = mean(transmissionM)
cat("Greutatea medie a masinilor cu Transmisie Automata:", meanTransmissionA, "\n")
cat("Greutatea medie a masinilor cu Transmisie Manuala:", meanTransmissionM, "\n")
# a
transmissionA = (mtcars[which(mtcars$am == 0), ])[, 2]
transmissionM = (mtcars[which(mtcars$am == 1), ])[, 2]
meanTransmissionA = mean(transmissionA)
meanTransmissionM = mean(transmissionM)
transmissionA = (mtcars[which(mtcars$am == 0), ])[, 6]
transmissionM = (mtcars[which(mtcars$am == 1), ])[, 6]
meanTransmissionA = mean(transmissionA)
meanTransmissionM = mean(transmissionM)
cylinders4 = (mtcars[which(mtcars$cyl == 4), ])[, 6]
cylinders6 = (mtcars[which(mtcars$cyl == 6), ])[, 6]
cylinders8 = (mtcars[which(mtcars$cyl == 8), ])[, 6]
meanCylinders4 = mean(cylinders4)
meanCylinders6 = mean(cylinders6)
meanCylinders8 = mean(cylinders8)
cat("Greutatea medie a masinilor cu 4 cilindrii:", meanCylinders4, "\n")
cat("Greutatea medie a masinilor cu 6 cilindrii:", meanCylinders6, "\n")
cat("Greutatea medie a masinilor cu 8 cilindrii:", meanCylinders8, "\n")
sel = mtcars[, 2, 9, 6]
sel = mtcars[, 2, 6, 9]
sel = mtcars[, 2, , 6, , 9]
funM = function(i, j)
{
res = 1/ (sqrt(abs(i - j) + 1))
return res
}
funN = function(i, j)
{
res = i/ (j ^ 2)
return res
}
i = 1:10
j = 1:10
matM = outer(i, j, funM)
matN = outer(i, j, funN)
colnames(matM) = i
rownames(matM) = j
colnames(matN) = i
rownames(matN) = j
funM = function(i, j)
{
res = 1/ (sqrt(abs(i - j) + 1))
return res
}
funN = function(i, j)
{
res = i/ (j ^ 2)
return res
}
i = 1:10
j = 1:10
matM = outer(i, j, funM)
matN = outer(i, j, funN)
colnames(matM) = i
rownames(matM) = j
colnames(matN) = i
rownames(matN) = j
funM = function(i, j)
{
res = 1/ (sqrt(abs(i - j) + 1))
return res
}
funN = function(i, j)
{
res = i/ (j ^ 2)
return res
}
i = 1:10
j = 1:10
matM = outer(i, j, funM)
matN = outer(i, j, funN)
colnames(matM) = i
rownames(matM) = j
colnames(matN) = i
rownames(matN) = j
funM = function(i, j)
{
res = 1/ (sqrt(abs(i - j) + 1))
return res
}
funN = function(i, j)
{
res = i/ (j ^ 2)
return res
}
i = 1:10
j = 1:10
matM = outer(i, j, funM)
matN = outer(i, j, funN)
colnames(matM) = i
rownames(matM) = j
colnames(matN) = i
rownames(matN) = j
funM = function(i, j)
{
res = 1/ (sqrt(abs(i - j) + 1))
return res
}
funN = function(i, j)
{
res = i/ (j ^ 2)
return res
}
i = 1:10
j = 1:10
matM = outer(i, j, funM)
matN = outer(i, j, funN)
matM = outer(i, j, funM)
funM = function(i, j)
{
res = 1/ (sqrt(abs(i - j) + 1))
}
funN = function(i, j)
{
res = i/ (j ^ 2)
}
i = 1:10
j = 1:10
matM = outer(i, j, funM)
matN = outer(i, j, funN)
colnames(matM) = i
rownames(matM) = j
colnames(matN) = i
rownames(matN) = j
sel = mtcars[, 2, , 6, , 9]
sel = mtcars[, 2, 6, 9]
sel = mtcars[, 2]
sel = select(mtcars, am, cyl, wt)
library(dplyr)
sel = select(mtcars, am, cyl, wt)
library(dplyr)
sel = select(mtcars, am, cyl, wt)
library(dplyr)
sel = select(mtcars, am, cyl, wt)
library(dplyr)
sel = mtcars[, c(2, 9, 6)]
View(sel)
data(mtcars)
data(mtcars)
sel = mtcars[, c(9, 2, 6)]
sel = mtcars[, c(9, 2, 6)]
fr = data.frame(matrix(nrow = unique(sel[, 9]), ncol = unique(sel[, 2])))
fr = data.frame(matrix(nrow = unique(sel[, 9]), ncol = unique(sel[, 2])))
fr = data.frame(matrix(nrow = unique(sel[, 9]), ncol = unique(sel[, 2])))
fr = data.frame(matrix(nrow = unique(sel[, 9]), ncol = unique(sel[, 2]))))
fr = data.frame(matrix(nrow = unique(sel[, 9]), ncol = unique(sel[, 2])))
fr = data.frame(matrix(nrow = unique(sel[, 1]), ncol = unique(sel[, 2]))
fr = data.frame(matrix(nrow = length(unique(sel[, 1])), ncol = length(unique(sel[, 2]))))
fr = data.frame(matrix(nrow = length(unique(sel[, 1])), ncol = length(unique(sel[, 2]))))
unique(sel[, 1])
length(unique(sel[, 1]))
c = length(unique(sel[, 1]))
fr = data.frame(matrix(nrow = length(unique(sel[, 1])), ncol = length(unique(sel[, 2]))))
data(mtcars)
sel = mtcars[, c(9, 2, 6)]
fr = data.frame(matrix(nrow = length(unique(sel[, 1])), ncol = length(unique(sel[, 2]))))
View(fr)
fr = data.frame(matrix(nrow = length(cylinderTypes), ncol = length(transmissionTypes)))
cylinderTypes = unique(sel[, 1])
transmissionTypes = unique(sel[, 2])
fr = data.frame(matrix(nrow = length(cylinderTypes), ncol = length(transmissionTypes)))
cylinderTypes = unique(sel[, 1])
cylNames = c("4 cyl", "6 cyl", "8 cyl")
transmissionTypes = unique(sel[, 2])
trNames = c("manual", "automat")
sel = mtcars[, c(9, 2, 6)]
cylinderTypes = unique(sel[, 1])
transmissionTypes = unique(sel[, 2])
cylNames = c("4 cyl", "6 cyl", "8 cyl")
trNames = c("manual", "automat")
rownames(fr) = trNames
colnames(fr) = cylNames
sel = mtcars[, c(9, 2, 6)]
cylinderTypes = unique(sel[, 1])
transmissionTypes = unique(sel[, 2])
cylNames = c("4 cyl", "6 cyl", "8 cyl")
trNames = c("manual", "automat")
fr = data.frame(matrix(nrow = length(cylinderTypes), ncol = length(transmissionTypes)))
rownames(fr) = trNames
colnames(fr) = cylNames
cylinderTypes = unique(sel[, 1])
transmissionTypes = unique(sel[, 2])
cylNames = c("4 cyl", "6 cyl", "8 cyl")
trNames = c("automat", "manual")
sel = mtcars[, c(9, 2, 6)]
cylinderTypes = unique(sel[, 1])
transmissionTypes = unique(sel[, 2])
cylNames = c("4 cyl", "6 cyl", "8 cyl")
trNames = c("automat", "manual")
cylNames = c("4 cyl", "6 cyl", "8 cyl")
trNames = c("automat", "manual")
fr = data.frame(matrix(nrow = length(cylinderTypes), ncol = length(transmissionTypes)))
rownames(fr) = trNames
colnames(fr) = cylNames
sel = mtcars[, c(9, 2, 6)]
cylinderTypes = unique(sel[, 1])
transmissionTypes = unique(sel[, 2])
cylNames = c("4 cyl", "6 cyl", "8 cyl")
trNames = c("automat", "manual")
fr = data.frame(matrix(nrow = length(cylinderTypes), ncol = length(transmissionTypes)))
rownames(fr) = trNames
colnames(fr) = cylNames
for(i in length(transmissionTypes)
{
for(j in length(cylinderTypes))
{
fr[i, j] = mean((sel[which(sel$am == i & sel$cyl == j), ])[, 3])
}
}
fr = data.frame(matrix(nrow = length(cylinderTypes), ncol = length(transmissionTypes)))
rownames(fr) = trNames
colnames(fr) = cylNames
for(i in 1:length(transmissionTypes)
{
for(j in 1:length(cylinderTypes))
{
fr[i, j] = mean((sel[which(sel$am == i & sel$cyl == j), ])[, 3])
}
}
for(i in 1:length(transmissionTypes)
for(j in 1:length(cylinderTypes))
fr[i, j] = mean((sel[which(sel$am == i & sel$cyl == j), ])[, 3])
for(i in 1:length(transmissionTypes)
{
for(j in 1:length(cylinderTypes))
{
fr[i, j] = mean((sel[which(sel$am == i & sel$cyl == j), ])[, 3])
}
}
for(i in 1:length(transmissionTypes))
{
for(j in 1:length(cylinderTypes))
{
fr[i, j] = mean((sel[which(sel$am == i & sel$cyl == j), ])[, 3])
}
}
for(i in 1:length(transmissionTypes))
{
for(j in 1:length(cylinderTypes))
{
fr[i, j] = mean((sel[which(sel$am == i & sel$cyl == j), ])[, 3])
}
}
for(i in 1:length(transmissionTypes))
{
for(j in 1:length(cylinderTypes))
{
fr[i, j] = mean((sel[which(sel$am == i & sel$cyl == j), ])[, 3])
}
}
cylinders4 = (mtcars[which(mtcars$cyl == 4), ])[, 6]
cylinders6 = (mtcars[which(mtcars$cyl == 6), ])[, 6]
cylinders8 = (mtcars[which(mtcars$cyl == 8), ])[, 6]
meanCylinders4 = mean(cylinders4)
meanCylinders6 = mean(cylinders6)
meanCylinders8 = mean(cylinders8)
cat("Greutatea medie a masinilor cu 4 Cilindrii:", meanCylinders4, "\n")
cat("Greutatea medie a masinilor cu 6 Cilindrii:", meanCylinders6, "\n")
cat("Greutatea medie a masinilor cu 8 Cilindrii:", meanCylinders8, "\n")
sel = mtcars[, c(9, 2, 6)]
cylinderTypes = unique(sel[, 1])
transmissionTypes = unique(sel[, 2])
cylNames = c("4 cyl", "6 cyl", "8 cyl")
trNames = c("automat", "manual")
fr = data.frame(matrix(nrow = length(cylinderTypes), ncol = length(transmissionTypes)))
rownames(fr) = trNames
colnames(fr) = cylNames
for(i in 1:length(transmissionTypes))
{
for(j in 1:length(cylinderTypes))
{
fr[i, j] = mean((sel[which(sel$am == cylinderTypes[i] & sel$cyl == transmissionTypes[j]), ])[, 3])
}
}
sel = mtcars[, c(9, 2, 1)]
cylinderTypes = unique(sel[, 1])
transmissionTypes = unique(sel[, 2])
cylNames = c("4 cyl", "6 cyl", "8 cyl")
trNames = c("automat", "manual")
fr = data.frame(matrix(nrow = length(cylinderTypes), ncol = length(transmissionTypes)))
rownames(fr) = trNames
colnames(fr) = cylNames
for(i in 1:length(transmissionTypes))
{
for(j in 1:length(cylinderTypes))
{
fr[i, j] = mean((sel[which(sel$am == cylinderTypes[i] & sel$cyl == transmissionTypes[j]), ])[, 3])
}
}
sel = mtcars[, c(9, 2, 1)]
cylinderTypes = unique(sel[, 1])
transmissionTypes = unique(sel[, 2])
cylNames = c("4 cyl", "6 cyl", "8 cyl")
trNames = c("automat", "manual")
fr = data.frame(matrix(nrow = length(cylinderTypes), ncol = length(transmissionTypes)))
rownames(fr) = trNames
colnames(fr) = cylNames
for(i in 1:length(transmissionTypes))
{
for(j in 1:length(cylinderTypes))
{
fr[i, j] = mean((sel[which(sel$am == cylinderTypes[i] & sel$cyl == transmissionTypes[j]), ])[, 3])
}
}
#
# PROBLEMA 10
#
funM = function(i, j)
{
res = 1/ (sqrt(abs(i - j) + 1))
}
funN = function(i, j)
{
res = i/ (j ^ 2)
}
for(i in 1:length(transmissionTypes))
for(j in 1:length(cylinderTypes))
fr[i, j] = mean((sel[which(sel$am == cylinderTypes[i] & sel$cyl == transmissionTypes[j]), ])[, 3])
fr = data.frame(matrix(nrow = length(cylinderTypes), ncol = length(transmissionTypes)))
rownames(fr) = trNames
colnames(fr) = cylNames
for(i in 1:length(transmissionTypes))
for(j in 1:length(cylinderTypes))
fr[i, j] = mean((sel[which(sel$am == transmissionTypes[i] &
sel$cyl == cylinderTypes[j]), ])[, 3])
# c
sel = mtcars[, c(9, 2, 1)]
cylinderTypes = unique(sel[, 1])
transmissionTypes = unique(sel[, 2])
cylNames = c("4 cyl", "6 cyl", "8 cyl")
trNames = c("automat", "manual")
fr = data.frame(matrix(nrow = length(cylinderTypes), ncol = length(transmissionTypes)))
rownames(fr) = trNames
colnames(fr) = cylNames
for(i in 1:length(transmissionTypes))
for(j in 1:length(cylinderTypes))
fr[i, j] = mean((sel[which(sel$am == transmissionTypes[i] &
sel$cyl == cylinderTypes[j]), ])[, 3])
for(i in 1:length(transmissionTypes))
for(j in 1:length(cylinderTypes))
fr[i, j] = mean((sel[which(sel$am == transmissionTypes[i] & sel$cyl == cylinderTypes[j]), ])[, 3])
for(i in 1:length(transmissionTypes))
{
for(j in 1:length(cylinderTypes))
{
fr[i, j] = mean((sel[which(sel$am == transmissionTypes[i] & sel$cyl == cylinderTypes[j]), ])[, 3])
}
}
for(i in 1:length(transmissionTypes))
for(j in 1:length(cylinderTypes))
fr[i, j] = mean((sel[which(sel$am == transmissionTypes[i] & sel$cyl == cylinderTypes[j]), ])[, 3])
cylinderTypes = unique(sel[, 1])
transmissionTypes = unique(sel[, 2])
cylNames = c("4 cyl", "6 cyl", "8 cyl")
trNames = c("automat", "manual")
fr = data.frame(matrix(nrow = length(cylinderTypes), ncol = length(transmissionTypes)))
rownames(fr) = trNames
colnames(fr) = cylNames
sel = mtcars[, c(9, 2, 1)]
cylinderTypes = unique(sel[, 1])
transmissionTypes = unique(sel[, 2])
cylNames = c("4 cyl", "6 cyl", "8 cyl")
trNames = c("automat", "manual")
fr = data.frame(matrix(nrow = length(cylinderTypes), ncol = length(transmissionTypes)))
rownames(fr) = trNames
colnames(fr) = cylNames
View(fr)
sel = mtcars[, c(9, 2, 1)]
cylinderTypes = unique(sel[, 2])
transmissionTypes = unique(sel[, 1])
cylNames = c("4 cyl", "6 cyl", "8 cyl")
trNames = c("automat", "manual")
fr = data.frame(matrix(nrow = length(cylinderTypes), ncol = length(transmissionTypes)))
rownames(fr) = trNames
colnames(fr) = cylNames
for(i in 1:length(transmissionTypes))
for(j in 1:length(cylinderTypes))
fr[i, j] = mean((sel[which(sel$am == transmissionTypes[i] & sel$cyl == cylinderTypes[j]), ])[, 3])
sel = mtcars[, c(9, 2, 1)]
transmissionTypes = unique(sel[, 1])
cylinderTypes = unique(sel[, 2])
cylNames = c("4 cyl", "6 cyl", "8 cyl")
trNames = c("automat", "manual")
fr = data.frame(matrix(nrow = length(transmissionTypes), ncol = length(cylinderTypes)))
rownames(fr) = trNames
colnames(fr) = cylNames
for(i in 1:length(transmissionTypes))
for(j in 1:length(cylinderTypes))
fr[i, j] = mean((sel[which(sel$am == transmissionTypes[i] & sel$cyl == cylinderTypes[j]), ])[, 3])
print(fr)
cat("Media consumului masinilor, in functie de tipul transmisiei si al nr. cilindrilor:")
print(fr)
cat("Media consumului masinilor, in functie de tipul transmisiei si al nr. cilindrilor:\n")
print(fr)
#
# PROBLEMA 8
#
fourWeeks = matrix(c(106, 123, 123, 111, 125, 113, 130,
113, 114, 100, 120, 130, 118, 114,
127, 112, 121, 114, 120, 119, 127,
114, 108, 127, 131, 157, 102, 133), 4, 7, byrow = TRUE)
colnames(fourWeeks) = c("L", "Ma", "Mi", "J", "V", "S", "D")
rownames(fourWeeks) = c("S1", "S2", "S3", "S4")
names(colnames(fourWeeks)) = c("Luni", "Marti", "Miercuri", "Joi", "Vineri", "Sambata", "Duminica")
sumDays = colSums(fourWeeks)
maxDay = max(sumDays)
indMaxDay = which(sumDays == maxDay)
dMax = names(indMaxDay)
minDay = min(sumDays)
indMinDay = which(sumDays == minDay)
dMin = names(indMinDay)
values = which(fourWeeks > 120, arr.ind = TRUE, useNames = TRUE)
selection120 = data.frame(Week = rownames(fourWeeks)[values[, 1]],
Day = colnames(fourWeeks)[values[, 2]])
selection120 = selection120[order(selection120[, 1], selection120[, 2]), ]
print(fourWeeks)
print(values)
cat("Cel mai mult s-a vorbit in zilele de", names(which(colnames(fourWeeks) == dMax)), "\n")
cat("Cel mai putin s-a vorbit in zilele de", names(which(colnames(fourWeeks) == dMin)), "\n")
cat("Zilele in care s-a vorbit > 120 min sunt: ")
print(selection120)
gc()
gc()
