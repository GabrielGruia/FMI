# exercitiul 3 R


# vectorul v cu valorile cerute
v = rnorm(100, mean = 1, sd = 0.3)
v = trunc(v*10^2)/10^2
print(v)

# media lui v
meanv = mean(v)
print(meanv)

# mediana lui v
medianv = median(v)
print(medianv)

# moda lui v
getmode = function(v)
{
    uniqv = unique(v)
    uniqv[which.max(tabulate(match(v, uniqv)))]
}

modev = getmode(v)
print(modev)


# histograma
png(file = "histogram.png")     # in loc de "histogram.png" redenumiti cu calea la care vreti sa stocati poza + numele ei

hist(v, xlab = "Value", col = "gold", border = "white", xlim = c(0, 2))

dev.off()





# exercitiul 4 R


nrLines = 1:15
nrColumns = 1:15

funM = function(i,j)    # creeaza matricea M
{
    1 / sqrt((i+2) * (j+2))
}

funN = function(i,j)    # creeaza matricea N
{
    (i+1) / (j+1)
}

M = outer(nrLines, nrColumns, funM)
N = outer(nrLines, nrColumns, funN)
MN = M %*% N            # creeaza matricea M*N

detMN = det(MN)     # determinanul matricei M*N

if(detMN == 0) {
    print("NEinversabila")
} else {
    print("inversabila")
}